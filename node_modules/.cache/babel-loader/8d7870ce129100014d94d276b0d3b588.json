{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Practice\\\\React-BehindTheScences\\\\src\\\\components\\\\UI\\\\Button\\\\Button.js\";\nimport React from \"react\";\nimport classes from \"./Button.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: props.type || \"button\",\n    className: `${classes.button} ${props.className}`,\n    onClick: props.onClick,\n    disabled: props.disabled,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\nexport default _c2 = /*#__PURE__*/React.memo(Button); //it's still re-rendered because when the App.js re-rendered,\n//the function toggleParagraphHandler is recreated, so that consider that new function\n// -> onClick props changed -> re-rendered -> useCallback()\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/React Practice/React-BehindTheScences/src/components/UI/Button/Button.js"],"names":["React","classes","Button","props","type","button","className","onClick","disabled","children","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,qBAApB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,sBACE;AACE,IAAA,IAAI,EAAEA,KAAK,CAACC,IAAN,IAAc,QADtB;AAEE,IAAA,SAAS,EAAG,GAAEH,OAAO,CAACI,MAAO,IAAGF,KAAK,CAACG,SAAU,EAFlD;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACI,OAHjB;AAIE,IAAA,QAAQ,EAAEJ,KAAK,CAACK,QAJlB;AAAA,cAMGL,KAAK,CAACM;AANT;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAXD;;KAAMP,M;AAaN,kCAAeF,KAAK,CAACU,IAAN,CAAWR,MAAX,CAAf,C,CAAmC;AACnC;AACA","sourcesContent":["import React from \"react\";\n\nimport classes from \"./Button.module.css\";\n\nconst Button = (props) => {\n  return (\n    <button\n      type={props.type || \"button\"}\n      className={`${classes.button} ${props.className}`}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default React.memo(Button); //it's still re-rendered because when the App.js re-rendered,\n//the function toggleParagraphHandler is recreated, so that consider that new function\n// -> onClick props changed -> re-rendered -> useCallback()\n"]},"metadata":{},"sourceType":"module"}